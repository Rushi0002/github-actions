# Env varibales at step level example

# name: Docker Image Build And Deploy

# on: push

# jobs:
#   docker:
#     runs-on: ubuntu-latest
#     steps:
#     - name: Docker Build
#       env: 
#         CONTAINER_REGISTRY: docker.io
#         DOCKER_USERNAME: 
#         IMAGE_NAME: github-actions-nginx
#       run: echo docker build -t $CONTAINER_REGISTRY/$DOCKER_USERNAME/$IMAGE_NAME:latest

#       # Another way to use env variables
#       # run: echo docker build -t ${{env.CONTAINER_REGISTRY}}/${{env.DOCKER_USERNAME}}/${{env.IMAGE_NAME}}:latest

#     - name: Docker Login
#       env: 
#         DOCKER_PASSWORD: 
#         DOCKER_USERNAME:  
#       run: echo docker login --username=$DOCKER_USERNAME --password=$DOCKER_PASSWORD

#     - name: Docker Publish
#       env: 
#         CONTAINER_REGISTRY: docker.io
#         DOCKER_USERNAME: 
#         IMAGE_NAME: github-actions-nginx
#       run: echo docker push $CONTAINER_REGISTRY/$DOCKER_USERNAME/$IMAGE_NAME:latest

#   deploy:
#     needs: docker
#     runs-on: ubuntu-latest
#     steps:
#     - name: Docker Run
#       env: 
#         CONTAINER_REGISTRY: docker.io
#         DOCKER_USERNAME: 
#         IMAGE_NAME: github-actions-nginx
#       run: echo docker run -d -p 8080:80 $CONTAINER_REGISTRY/$DOCKER_USERNAME/$IMAGE_NAME:latest







# Env varibales at job level example

# name: Docker Image Build And Deploy

# on: push

# jobs:
#   docker:
#     env:
#       CONTAINER_REGISTRY: docker.io
#       DOCKER_USERNAME: 
#       IMAGE_NAME: github-actions-nginx
#       DOCKER_PASSWORD:    
#     runs-on: ubuntu-latest
#     steps:
#     - name: Docker Build
#       run: echo docker build -t $CONTAINER_REGISTRY/$DOCKER_USERNAME/$IMAGE_NAME:latest

#     - name: Docker Login 
#       run: echo docker login --username=$DOCKER_USERNAME --password=$DOCKER_PASSWORD

#     - name: Docker Publish 
#       run: echo docker push $CONTAINER_REGISTRY/$DOCKER_USERNAME/$IMAGE_NAME:latest

#   deploy:
#     env:
#       CONTAINER_REGISTRY: docker.io
#       DOCKER_USERNAME: 
#       IMAGE_NAME: github-actions-nginx
#     needs: docker
#     runs-on: ubuntu-latest
#     steps:
#     - name: Docker Run
#       run: echo docker run -d -p 8080:80 $CONTAINER_REGISTRY/$DOCKER_USERNAME/$IMAGE_NAME:latest





# Env varibales at workflow level example

# name: Docker Image Build And Deploy

# on: push

# env:
#   CONTAINER_REGISTRY: docker.io
#   DOCKER_USERNAME: 
#   IMAGE_NAME: github-actions-nginx
#   DOCKER_PASSWORD:

# jobs:
#   docker:    
#     runs-on: ubuntu-latest
#     steps:
#     - name: Docker Build
#       run: echo docker build -t $CONTAINER_REGISTRY/$DOCKER_USERNAME/$IMAGE_NAME:latest

#     - name: Docker Login 
#       run: echo docker login --username=$DOCKER_USERNAME --password=$DOCKER_PASSWORD

#     - name: Docker Publish 
#       run: echo docker push $CONTAINER_REGISTRY/$DOCKER_USERNAME/$IMAGE_NAME:latest


#   deploy: 
#     needs: docker
#     runs-on: ubuntu-latest
#     steps:
#     - name: Docker Run
#       run: echo docker run -d -p 8080:80 $CONTAINER_REGISTRY/$DOCKER_USERNAME/$IMAGE_NAME:latest




# Repository level secrets     ${{secrets.DOCKER_PASSWORD}}
# Repository level variables   ${{vars.DOCKER_USERNAME}}
name: Docker Image Build And Deploy

on: push

env:
  CONTAINER_REGISTRY: docker.io
  IMAGE_NAME: github-actions-nginx

jobs:
  docker:    
    runs-on: ubuntu-latest
    steps:
    - name: Docker Build
      run: echo docker build -t $CONTAINER_REGISTRY/${{vars.DOCKER_USERNAME}}/$IMAGE_NAME:latest

    - name: Docker Login 
      run: echo docker login --username=${{vars.DOCKER_USERNAME}} --password=${{secrets.DOCKER_PASSWORD}}

    - name: Docker Publish 
      run: echo docker push $CONTAINER_REGISTRY/${{vars.DOCKER_USERNAME}}/$IMAGE_NAME:latest


  deploy: 
    needs: docker
    runs-on: ubuntu-latest
    steps:
    - name: Docker Run
      run: echo docker run -d -p 8080:80 $CONTAINER_REGISTRY/${{vars.DOCKER_USERNAME}}/$IMAGE_NAME:latest
    


  